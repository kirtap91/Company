// <auto-generated />
using System;
using Company.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Company.Data.Migrations
{
    [DbContext(typeof(CompanyContext))]
    [Migration("20230103143120_AddData")]
    partial class AddData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BusinessDepartmentInfo", b =>
                {
                    b.Property<int>("BusinessesId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentInfosId")
                        .HasColumnType("int");

                    b.HasKey("BusinessesId", "DepartmentInfosId");

                    b.HasIndex("DepartmentInfosId");

                    b.ToTable("BusinessDepartmentInfo");
                });

            modelBuilder.Entity("Company.Data.Entities.Business", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BusinessLoc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Businesses")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Businesses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BusinessLoc = "Sweden",
                            Businesses = "Microsoft"
                        },
                        new
                        {
                            Id = 2,
                            BusinessLoc = "Sweden",
                            Businesses = "Intel"
                        });
                });

            modelBuilder.Entity("Company.Data.Entities.BusinessDepartment", b =>
                {
                    b.Property<int>("BusinessId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmentInfoId")
                        .HasColumnType("int");

                    b.HasKey("BusinessId", "DepartmentId");

                    b.HasIndex("DepartmentInfoId");

                    b.ToTable("BusinessDepartments");

                    b.HasData(
                        new
                        {
                            BusinessId = 1,
                            DepartmentId = 2
                        },
                        new
                        {
                            BusinessId = 1,
                            DepartmentId = 4
                        },
                        new
                        {
                            BusinessId = 2,
                            DepartmentId = 1
                        },
                        new
                        {
                            BusinessId = 2,
                            DepartmentId = 2
                        },
                        new
                        {
                            BusinessId = 2,
                            DepartmentId = 3
                        });
                });

            modelBuilder.Entity("Company.Data.Entities.DepartmentInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("DepartmentInfos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Department = "Sales"
                        },
                        new
                        {
                            Id = 2,
                            Department = "Economy"
                        },
                        new
                        {
                            Id = 3,
                            Department = "Support"
                        },
                        new
                        {
                            Id = 4,
                            Department = "Development"
                        });
                });

            modelBuilder.Entity("Company.Data.Entities.EmployeeInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BusinessId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmentInfoId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeePositionId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PositionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("UnionMember")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BusinessId");

                    b.HasIndex("DepartmentInfoId");

                    b.HasIndex("EmployeePositionId");

                    b.ToTable("EmployeeInfos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BusinessId = 1,
                            DepartmentId = 1,
                            FirstName = "Patrik",
                            LastName = "Gustavsson",
                            PositionId = 3,
                            Salary = 25362m,
                            UnionMember = false
                        },
                        new
                        {
                            Id = 2,
                            BusinessId = 1,
                            DepartmentId = 3,
                            FirstName = "Per",
                            LastName = "Persson",
                            PositionId = 3,
                            Salary = 48252m,
                            UnionMember = true
                        },
                        new
                        {
                            Id = 3,
                            BusinessId = 1,
                            DepartmentId = 3,
                            FirstName = "Gustav",
                            LastName = "Gustavsson",
                            PositionId = 2,
                            Salary = 25000m,
                            UnionMember = true
                        },
                        new
                        {
                            Id = 4,
                            BusinessId = 1,
                            DepartmentId = 2,
                            FirstName = "Karl",
                            LastName = "Karlsson",
                            PositionId = 2,
                            Salary = 25000m,
                            UnionMember = true
                        },
                        new
                        {
                            Id = 5,
                            BusinessId = 2,
                            DepartmentId = 4,
                            FirstName = "Jenny",
                            LastName = "Johansson",
                            PositionId = 1,
                            Salary = 45000m,
                            UnionMember = false
                        },
                        new
                        {
                            Id = 6,
                            BusinessId = 2,
                            DepartmentId = 2,
                            FirstName = "Klara",
                            LastName = "Silverstam",
                            PositionId = 4,
                            Salary = 36000m,
                            UnionMember = false
                        });
                });

            modelBuilder.Entity("Company.Data.Entities.EmployeePosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeePositions")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("EmployeePositions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeId = 3,
                            EmployeePositions = "CEO"
                        },
                        new
                        {
                            Id = 2,
                            EmployeeId = 4,
                            EmployeePositions = "SalesPerson"
                        },
                        new
                        {
                            Id = 3,
                            EmployeeId = 6,
                            EmployeePositions = "Developer"
                        },
                        new
                        {
                            Id = 4,
                            EmployeeId = 7,
                            EmployeePositions = "Accountant"
                        });
                });

            modelBuilder.Entity("BusinessDepartmentInfo", b =>
                {
                    b.HasOne("Company.Data.Entities.Business", null)
                        .WithMany()
                        .HasForeignKey("BusinessesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Company.Data.Entities.DepartmentInfo", null)
                        .WithMany()
                        .HasForeignKey("DepartmentInfosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Company.Data.Entities.BusinessDepartment", b =>
                {
                    b.HasOne("Company.Data.Entities.Business", "Business")
                        .WithMany()
                        .HasForeignKey("BusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Company.Data.Entities.DepartmentInfo", "DepartmentInfo")
                        .WithMany()
                        .HasForeignKey("DepartmentInfoId");

                    b.Navigation("Business");

                    b.Navigation("DepartmentInfo");
                });

            modelBuilder.Entity("Company.Data.Entities.EmployeeInfo", b =>
                {
                    b.HasOne("Company.Data.Entities.Business", "Business")
                        .WithMany()
                        .HasForeignKey("BusinessId");

                    b.HasOne("Company.Data.Entities.EmployeePosition", "DepartmentInfo")
                        .WithMany()
                        .HasForeignKey("DepartmentInfoId");

                    b.HasOne("Company.Data.Entities.DepartmentInfo", "EmployeePosition")
                        .WithMany()
                        .HasForeignKey("EmployeePositionId");

                    b.Navigation("Business");

                    b.Navigation("DepartmentInfo");

                    b.Navigation("EmployeePosition");
                });
#pragma warning restore 612, 618
        }
    }
}
